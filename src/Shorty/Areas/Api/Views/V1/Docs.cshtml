@{
    ViewData["Title"] = "Shorty Api Docs";
    ViewData["Tab"] = 1;
}

<div class="text-center">
    <h1>The API</h1>
    <p>Simple. Fast. Easy</p>
    
    <section class="doc-section">
        <h2 class="section-title">Introduction</h2>
        @*<code>
            $ curl '@Context.Request.Scheme://@Context.Request.Host/api/v1/create?url=YOUR_URL_HERE'
        </code>*@
        <p class="doc-paragraph">Shorty has a very simple and easy to use api to help you easily automate shortening links. 
            This service is intended to be used to create short-lived shareable links. The default expiry for a link if none provided during creation is 60 days.
            After 60 days, the url might get assigned as the shortened link for another url, so please set the expiry value incase you might need more time 
            or use another service that offers permanent links.</p>
    </section>
    
    <section class="doc-section">
        <h2 class="section-title">Usage</h2>
        <p class="doc-paragraph">Send a GET request to the following url to get the shortened version of the provided url. Replace <strong>YOUR_URL_HERE</strong> with a valid url.
            You might need to url encode it depending on what you use to send the request.</p>
        <code class="doc-code">
            @Context.Request.Scheme://@Context.Request.Host/api/v1/create?url=YOUR_URL_HERE
        </code>
        <p class="doc-paragraph">Here's the format of the api response with added line breaks for easy visualisation:</p>
        <code class="doc-code">
            { <br>
            &nbsp;&nbsp;"shortUrl": "@Context.Request.Scheme://@Context.Request.Host/ABCDE", <br>
            &nbsp;&nbsp;"originalUrl": "YOUR_URL_HERE", <br>
            &nbsp;&nbsp;"expiresAt": 1725055989 <br>
            } <br>
        </code>
        <p class="doc-paragraph">
            Here the <strong>expiresAt</strong> integer is when the generated short url will cease to function represented in unix time milliseconds UTC.
            <strong>originalUrl</strong> is the url you provided and <strong>shortUrl</strong> is the shortened url that you can use to redirect to the original url.
        </p>
        <p class="doc-paragraph">
            If you don't care about any of that and just want the shortened url that you can use for a little while, add the <strong>minimal=y</strong> query parameter to the url link this:
        </p>
        <code class="doc-code">
            @Context.Request.Scheme://@Context.Request.Host/api/v1/create?url=YOUR_URL_HERE&minimal=y
        </code>
        <p class="doc-paragraph">
            This will return a plain text response with just the shortened url terminated by a newline.
        </p>
        <p class="doc-paragraph">
            You can also pass in <strong>expiry</strong> as an optional parameter to modify how long the link should remain active.
            The value should be in minutes between 10 and 525600 (1 year). Here's an example:
        </p>
        <code class="doc-code">
            @Context.Request.Scheme://@Context.Request.Host/api/v1/create?url=YOUR_URL_HERE&expiry=60
        </code>
        <p class="doc-paragraph">
            You can combine the minimal and expiry parameters if needed, although I would recommend always using the json response for better logging and tracking.
        </p>
        <p class="doc-paragraph">
            There is also the resolve endpoint which takes in an id and returns the original url in plain text that the id represents. Here's the format:
        </p>
        <code class="doc-code">
            @Context.Request.Scheme://@Context.Request.Host/api/v1/resolve?id=ABCDE
        </code>
        <p class="doc-paragraph">
            Here the <strong>id</strong> is the shortened url identifier without the full url. So the id of <strong>@Context.Request.Scheme://@Context.Request.Host/ABCDE</strong> would be <strong>ABCDE</strong>.
        </p>
    </section>

    <section class="doc-section">
        <h2 class="section-title">Availability</h2>
        <p class="doc-paragraph">
            The api is available at <strong>https://shorty.britto.tech/</strong> and is open for public use.
            There are some rate limits and I might tweak them as needed, but it should not be a problem for normal use.
            <br> 
            <br> 
            Please be considerate and don't abuse the service.
            If you need a more reliable and permanent solution, consider hosting your own instance of Shorty. 
            The source code and instructions on building/hosting is available on the <a target="_blank" href="https://github.com/JoseBritto/Shorty">GitHub Repo</a>.
            <br>
            <br>
            Please also be advised that I cannot guarantee any uptime or reliability of the service. I will try my best to keep it running, but I can't make any promises.
            This is just a hobby project for me and I don't have the resources to promise anything.
        </p>
    </section>
</div>

<style>
    :root {
        color-scheme: dark;
    }
    .no-display{
        display: none;
    }
    .doc-section{
        width: 60%;
        margin: 80px auto;
    }
    .doc-paragraph{
        text-align: left;
        font-size: 0.85em;
        font-weight: 500;
        margin-top: 5px;
        margin-bottom: 5px;
    }
    .doc-code{
        color: #BCC2FF;
        font-size: 0.85em;
        font-weight: 500;
        padding: 15px;
        background-color: #131318;
        border-radius: 20px;
        display: inline-block;
        width: fit-content;
        margin: 5px auto;
        text-align: left;
    }
    h1{
        color: #BCC2FF;
        font-size: 6em;
        margin-top: 80px;
    }
    h2{
        color: #BCC2FF;
    }
    p, span{
        color: #BCC2FF;
        font-size: 0.75em;
        font-weight: 500;
        margin-top: 5px;
        margin-bottom: 5px;
    }
    
    
</style>

<script>
    let done = false;
    document.getElementById("shorten").addEventListener("click", function() {
        shorten();
    });
    document.getElementById("url").addEventListener("keydown", function(e){
        if(e.key === "Enter"){
            shorten();
        } else if (done){
            resetAll();
        }
    });
    
    function shorten(){
        let url = document.getElementById("url").value;
        
        if (url === ""){
            return;
        }
        
        document.getElementById("shorten").children[0].classList.add("no-display");
        document.getElementById("shorten").children[1].classList.remove("no-display");
        
        fetch("/api/v1/create?url=" + url, {
            method: "GET",
            headers: {
                "Content-Type": "application/json"
            }
        }).then(response => {
            if (response.status !== 200){
                console.log("Error: " + response.status);
                return;
            }
            done = true;
            return response.json();
        }).then(response => {
            if (response === undefined){
                return;
            }
            let shortenedUrlElement = document.getElementById("shortened-url");
            shortenedUrlElement.innerHTML = response.shortUrl;
            let outputBox = document.getElementById("url-output-box");
            outputBox.classList.remove("hide-ui");
            document.getElementById("shorten").children[0].classList.remove("no-display");
            document.getElementById("shorten").children[1].classList.add("no-display");
        });
    }
    
    function resetAll(){
        let outputBox = document.getElementById("url-output-box");
        outputBox.classList.add("hide-ui");
        done = false;
    }
    
    document.getElementById("copy-div").addEventListener("click", function(){
        let shortenedUrl = document.getElementById("shortened-url");
        navigator.clipboard.writeText(shortenedUrl.innerHTML);
        let copyButton = document.getElementById("copy");
        copyButton.children[0].classList.add("no-display");
        copyButton.children[1].classList.remove("no-display");
        setTimeout(function(){
            copyButton.children[0].classList.remove("no-display");
            copyButton.children[1].classList.add("no-display");
        }, 1000);
    });

</script>