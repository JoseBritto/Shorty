@{
    ViewData["Title"] = "Shorty";
}

<div class="text-center">
    <h1>Shorty</h1>
    <p>Simple. Clean. Short.</p>
    <div class="input-box">
        <input type="text" id="url" placeholder="Enter a long URL here." />
        <button id="shorten">
            <img src="~/img/icons/darshan/short_icon.svg" alt="Shorten Icon">
            <img class="no-display spin-img" src="~/img/icons/material/autorenew_filled.svg" alt="Loading Icon">
        </button>
    </div>
    
    <div class="output-box hide-ui" id="url-output-box">
        <span>Shortened URL: </span>
        <div class="output" id="copy-div">
            <span id="shortened-url">https://britto.tech/WRONG</span>
            <div id="copy">
                <img src="~/img/icons/material/copy_filled.svg" alt="Copy Icon">
                <img class="no-display" src="~/img/icons/material/check_filled.svg" alt="Copy Icon">
            </div>
        </div>
    </div>

    <div id="error-box" class="hide-ui">
        <span>Error message goes here</span>
    </div>
    
    <p class="bottom-p">Shorty is a simple URL shortener that allows you to shorten long URLs into short, easy-to-share links.</p>
</div>

<style>
    :root {
        color-scheme: dark;
    }
    .no-display{
        display: none;
    }
    h1{
        color: #BCC2FF;
        font-size: 6em;
        margin-top: 80px;
    }
    p, span{
        color: #BCC2FF;
        font-size: 0.75em;
        font-weight: 500;
    }
    .input-box{
        margin-top: 20px;
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
    }
    input{
        width: 50%;
        height: 40px;
        border-radius: 20px 0 0 20px;
        border: 4px solid var(--primary);
        padding: 20px;
        font-size: 1em;
        background-color: var(--panel-background);
        color: var(--primary);
    }
    input:focus{
        outline: none;
    }
    button{
        height: 40px;
        border-radius: 0 20px 20px 0;
        border: 4px solid var(--primary);
        padding: 20px;
        font-size: 1em;
        background-color: var(--primary);
        color: var(--site-background);
        margin-left: 0;
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
    }
    button img{
        width: 20px;
        height: 20px;
    }
/*    button:hover{
        background-color: #20202A;
        color: #BCC2FF;
    }*/
    
    .bottom-p{
        margin-top: 20px;
        color: var(--primary);
        font-size: 0.75em;
        font-weight: 500;
    }
    
    .output-box{
        margin-top: 20px;
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
    }
    
    #copy{
        color: var(--primary);
        background-color: transparent;
        padding: 0;
        border: none;
        margin-left: 5px;
    }
    #copy img{
        width: 16px;
        height: 16px;
        filter: invert(82%) sepia(25%) saturate(4500%) hue-rotate(193deg) brightness(109%) contrast(103%);
    }
    
    #shortened-url{
        color: var(--primary);
        font-size: 0.75em;
        font-weight: 500;
        text-decoration: none;
    }
    .output{
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        margin-left: 12px;
        padding: 5px 10px;
    }
    .output:hover{
        background-color: var(--site-background);
        border-radius: 20px;
        cursor: pointer;
    }
    
    #error-box{
        margin-top: 0;
        padding: 0;
        font-size: 1.25em;
        font-weight: 500;
        width: 100%;
    }
    
    #error-box span{
        color: var(--danger); 
        display: block;
        height: 2em;
        text-align: center;
        width: 80%;
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
        margin: 0 auto;
        padding: 0;
    }
    
    .spin-img{
        animation: spin 2s linear infinite;
    }
    
    @@keyframes spin {
        0% { transform: rotate(0deg); }
        50% { transform: rotate(180deg); }
        99% { transform: rotate(359deg); }
        100% { transform: rotate(360deg); }
    }
    
    
</style>

@*Mobile styles*@
<style>
    @@media only screen and (max-width: 500px){
        h1 {
            font-size: 3em;
        }
        p, span{
            font-size: 0.75em;
        }
        
        .input-box{
            margin-top: 18%;
        }
        
        input{
            width: 70%;
            border: 2px solid var(--primary);
        }
        
        button{
            border: 2px solid var(--primary);
        }
        .bottom-p{
            margin: 16% auto;
            width: 80%;
        }
    }
</style>

<script>
    let done = false;
    document.getElementById("shorten").addEventListener("click", function() {
        shorten();
    });
    document.getElementById("url").addEventListener("keydown", function(e){
        if(e.key === "Enter"){
            shorten();
        } else if (done){
            resetAll();
        }
    });
    
    function shorten(){
        let url = document.getElementById("url").value;
        
        if (url === ""){
            return;
        }
        
        document.getElementById("shorten").children[0].classList.add("no-display");
        document.getElementById("shorten").children[1].classList.remove("no-display");
        
        fetch("/api/v1/create?url=" + url, {
            method: "GET",
            headers: {
                "Content-Type": "application/json"
            }
        }).then(response => {
            // Stop the loading animation
            document.getElementById("shorten").children[0].classList.remove("no-display");
            document.getElementById("shorten").children[1].classList.add("no-display");
            done = true;
            if (response.status !== 200){
                console.log("Error: " + response.status);
                if (response.body !== null){
                    response.body.getReader().read().then(function(result){
                        if (result.value === undefined || result.value === null){
                            return;
                        }
                        let decoder = new TextDecoder();
                        document.getElementById("error-box").children[0].innerHTML = decoder.decode(result.value);
                        document.getElementById("error-box").classList.remove("hide-ui");
                    });
                }
                
                document.getElementById("error-box").children[0].innerHTML = "An error occurred. Please try again.";
                document.getElementById("error-box").classList.remove("hide-ui");
                return;
            }
            return response.json();
        }).then(response => {
            if (response === undefined){
                return;
            }
            let shortenedUrlElement = document.getElementById("shortened-url");
            shortenedUrlElement.innerHTML = response.shortUrl;
            let outputBox = document.getElementById("url-output-box");
            outputBox.classList.remove("hide-ui");
        });
    }
    
    function resetAll(){
        let outputBox = document.getElementById("url-output-box");
        outputBox.classList.add("hide-ui");
        let errorBox = document.getElementById("error-box");
        errorBox.classList.add("hide-ui");
        done = false;
    }
    
    document.getElementById("copy-div").addEventListener("click", function(){
        let shortenedUrl = document.getElementById("shortened-url");
        navigator.clipboard.writeText(shortenedUrl.innerHTML);
        let copyButton = document.getElementById("copy");
        copyButton.children[0].classList.add("no-display");
        copyButton.children[1].classList.remove("no-display");
        setTimeout(function(){
            copyButton.children[0].classList.remove("no-display");
            copyButton.children[1].classList.add("no-display");
        }, 1000);
    });

</script>